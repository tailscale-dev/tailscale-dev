import Head from 'next/head';
import Image from 'next/image';
import { MDXRemote } from 'next-mdx-remote'
import { Date } from '../components/Date';
import { PostData, HeroImageMeta } from '../lib/md';

export default function PostLayout({ data }: { data: PostData }) {
  // XXX(Xe): I'm using an IIFE here because TypeScript doesn't have the concept of every expression being able to return a value
  const heroImage = ((data) => {
    if (data.hero === undefined) {
      return <></>;
    }

    let hero: HeroImageMeta = data.hero;

    return (
      <figure className="hero">
        <Image
          src={`/images/hero/${hero.name}.png`}
          alt={hero.desc}
          width={hero.width}
          height={hero.height}
        />
        <figcaption className="text-gray-600 mx-2 my-1">Image generated by {hero.generator}, prompt: {hero.desc}</figcaption>
        <Head>
          <meta property="og:image" content={`/images/hero/${hero.name}.png`} />
        </Head>
      </figure>
    );
  })(data);
  return (
    <>
      <Head>
        <title>{data.title}</title>
      </Head>
      <h2 className="my-2">{data.title}</h2>
      <Date date={data.date} />

      {heroImage}
          
      <MDXRemote {...data.content} />

      <hr />

      <a href={`https://github.com/tailscale-dev/tailscale-dev/edit/main${data.repoPath}`} target='_blank'>Improve this page</a>
    </>
  )
};
